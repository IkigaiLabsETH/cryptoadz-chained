// SPDX-License-Identifier: MPL-2.0

pragma solidity ^0.8.13;

///////////////////////////////////////////////////////////////////////////////////////////////////////////
// This contract was auto-generated by a tool, and may be overwritten. Do not make changes to this file. //
///////////////////////////////////////////////////////////////////////////////////////////////////////////

import "./CrypToadzBase.sol";

contract CrypToadz is CrypToadzBase {

    constructor(address _stringProvider, address _builder) CrypToadzBase(_stringProvider, _builder) {

    }

    
    function getTraitName(uint8 traitValue) internal override pure returns (string memory) {
        if(traitValue >= 0 && traitValue < 17) {
            return "Background";
        }
        if(traitValue >= 17 && traitValue < 51) {
            return "Body";
        }
        if(traitValue >= 51 && traitValue < 104) {
            return "Head";
        }
        if(traitValue >= 104 && traitValue < 112) {
            return "Accessory II";
        }
        if(traitValue >= 112 && traitValue < 119) {
            return "# Traits";
        }
        if(traitValue >= 119 && traitValue < 121) {
            return "Size";
        }
        if(traitValue >= 121 && traitValue < 139) {
            return "Mouth";
        }
        if(traitValue >= 139 && traitValue < 172) {
            return "Eyes";
        }
        if(traitValue >= 172 && traitValue < 178) {
            return "Custom";
        }
        if(traitValue >= 178 && traitValue < 241) {
            return "Name";
        }
        if(traitValue >= 241 && traitValue < 250) {
            return "Accessory I";
        }
        if(traitValue >= 250 && traitValue < 253) {
            return "Clothes";
        }
        revert();
    }

    
}

